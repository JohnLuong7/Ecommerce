@model Ecommerce.Models.Product
@using System.Text.Json
@using System.Collections.Generic
@using System.Linq
@using Ecommerce.Models

@{
    ViewData["Title"] = @Model.Name;

    // --- KHAI BÁO CÁC BIẾN DỮ LIỆU ĐÃ DESERIALIZE TỪ JSON ---
    List<ProductVersionModel> versions = new List<ProductVersionModel>();
    List<ColorOptionModel> colors = new List<ColorOptionModel>();
    List<PromotionItemModel> promotions = new List<PromotionItemModel>();
    List<BannerImageModel> promoBanners = new List<BannerImageModel>();
    List<SpecGroupModel> specGroups = new List<SpecGroupModel>();
    List<CommitmentItemModel> commitments = new List<CommitmentItemModel>();

    try
    {
        if (!string.IsNullOrEmpty(Model.VariantsJson))
        {
            versions = JsonSerializer.Deserialize<List<ProductVersionModel>>(Model.VariantsJson) ?? new List<ProductVersionModel>();
        }
        if (!string.IsNullOrEmpty(Model.ColorsJson))
        {
            colors = JsonSerializer.Deserialize<List<ColorOptionModel>>(Model.ColorsJson) ?? new List<ColorOptionModel>();
        }
        if (!string.IsNullOrEmpty(Model.PromotionsJson))
        {
            promotions = JsonSerializer.Deserialize<List<PromotionItemModel>>(Model.PromotionsJson) ?? new List<PromotionItemModel>();
        }
        if (!string.IsNullOrEmpty(Model.PromotionsJson))
        {
            promoBanners = JsonSerializer.Deserialize<List<BannerImageModel>>(Model.PromotionsJson) ?? new List<BannerImageModel>();
        }
        if (!string.IsNullOrEmpty(Model.SpecsJson))
        {
            specGroups = JsonSerializer.Deserialize<List<SpecGroupModel>>(Model.SpecsJson) ?? new List<SpecGroupModel>();
        }
        if (!string.IsNullOrEmpty(Model.CommitmentsJson))
        {
            commitments = JsonSerializer.Deserialize<List<CommitmentItemModel>>(Model.CommitmentsJson) ?? new List<CommitmentItemModel>();
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error deserializing product JSON: {ex.Message}");
    }

    var inventoryQuantity = Model.Inventory?.Quantity ?? 0;
}

<style>
    body {
        background-color: #f0f0f0;
    }

    .product-header {
        background-color: #fff;
        padding: 12px 0;
        margin-bottom: 15px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    .product-title {
        font-size: 20px;
        font-weight: 700;
        color: #333;
        margin: 0;
    }

    .product-rating {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        margin-left: 15px;
    }

    .rating-star {
        color: #ffa500;
        font-size: 14px;
    }

    .rating-count {
        color: #666;
        font-size: 13px;
    }

    .product-main-container {
        background-color: #fff;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
    }

    /* Cột trái - Hình ảnh */
    .image-section {
        position: relative;
    }

    .image-counter {
        position: absolute;
        bottom: 10px;
        right: 10px;
        background-color: rgba(0,0,0,0.6);
        color: #fff;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 12px;
        z-index: 10;
    }

    .main-product-image {
        width: 100%;
        max-height: 450px;
        object-fit: contain;
        margin-bottom: 15px;
    }

    .thumbnail-container {
        display: flex;
        gap: 8px;
        overflow-x: auto;
        padding: 5px 0;
    }

    .thumbnail-img {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border: 2px solid transparent;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.2s;
        opacity: 0.6;
        flex-shrink: 0;
    }

        .thumbnail-img.active {
            border-color: #d70018;
            opacity: 1;
        }

        .thumbnail-img:hover {
            opacity: 1;
        }

    /* Cam kết TGDĐ */
    .commitments-box {
        background-color: #fff;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
    }

    .commitments-title {
        font-size: 15px;
        font-weight: 700;
        margin-bottom: 15px;
        color: #333;
    }

    .commitment-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 15px;
    }

    .commitment-item {
        text-align: center;
        padding: 10px;
    }

    .commitment-icon {
        width: 48px;
        height: 48px;
        margin: 0 auto 8px;
        background-color: #f0f7ff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .commitment-icon i {
            font-size: 24px;
            color: #0066cc;
        }

    .commitment-text {
        font-size: 13px;
        color: #333;
        line-height: 1.4;
    }

    /* Tab thông tin */
    .info-tabs {
        background-color: #fff;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 15px;
    }

    .nav-pills {
        border-bottom: 1px solid #e0e0e0;
        margin-bottom: 20px;
    }

        .nav-pills .nav-link {
            color: #666;
            background-color: transparent;
            border: none;
            padding: 10px 20px;
            font-weight: 600;
            font-size: 14px;
            border-radius: 0;
        }

            .nav-pills .nav-link.active {
                color: #d70018;
                background-color: transparent;
                border-bottom: 2px solid #d70018;
            }

    .content-box {
        max-height: 600px;
        overflow: hidden;
        position: relative;
        transition: max-height 0.3s ease;
    }

        .content-box.expanded {
            max-height: none;
        }

    .read-more-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 120px;
        background: linear-gradient(to top, white 20%, rgba(255, 255, 255, 0) 100%);
        display: flex;
        align-items: flex-end;
        justify-content: center;
        padding-bottom: 20px;
    }

    .read-more-btn {
        background-color: #fff;
        color: #0066cc;
        border: 1px solid #0066cc;
        padding: 8px 24px;
        border-radius: 6px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .read-more-btn:hover {
            background-color: #f0f7ff;
        }

    /* Bảng thông số kỹ thuật */
    .spec-table {
        width: 100%;
        margin-bottom: 20px;
    }

        .spec-table th {
            background-color: #f8f8f8;
            font-weight: 600;
            color: #333;
            padding: 10px;
            width: 35%;
            font-size: 13px;
            border: 1px solid #e0e0e0;
        }

        .spec-table td {
            padding: 10px;
            color: #666;
            font-size: 13px;
            border: 1px solid #e0e0e0;
        }

    .spec-group-title {
        font-size: 15px;
        font-weight: 700;
        color: #d70018;
        margin: 20px 0 10px;
    }

        .spec-group-title:first-child {
            margin-top: 0;
        }

    /* Cột phải - Giá và mua hàng */
    .price-section {
        background-color: #fff;
        border-radius: 8px;
        padding: 20px;
        position: sticky;
        top: 20px;
    }

    /* Banner khuyến mãi (Hình ảnh) */
    .promotional-banners {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 20px;
    }

    .promo-banner-img {
        width: 100%;
        border-radius: 8px;
        cursor: pointer;
        transition: transform 0.2s;
    }

        .promo-banner-img:hover {
            transform: scale(1.02);
        }

    .version-selector {
        margin-bottom: 20px;
    }

    .version-label {
        font-size: 13px;
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        display: block;
    }

    .version-options {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
    }

    .version-btn {
        padding: 8px 14px;
        border: 1px solid #d1d5db;
        border-radius: 8px;
        background-color: #fff;
        font-size: 13px;
        cursor: pointer;
        transition: all 0.2s;
        color: #333;
    }

        .version-btn:hover {
            border-color: #d70018;
        }

        .version-btn.active {
            border-color: #d70018;
            background-color: #fff5f5;
            color: #d70018;
            font-weight: 600;
        }

    .color-selector {
        margin-bottom: 20px;
    }

    .color-options {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .color-circle {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        border: 2px solid #ddd;
        cursor: pointer;
        transition: all 0.2s;
        position: relative;
    }

        .color-circle.active {
            border-color: #d70018;
            border-width: 3px;
        }

        .color-circle:hover {
            transform: scale(1.1);
        }

    .price-info {
        margin-bottom: 20px;
    }

    .current-price {
        font-size: 26px;
        font-weight: 700;
        color: #d70018;
        margin-bottom: 5px;
    }

    .original-price-row {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 10px;
    }

    .original-price {
        font-size: 15px;
        color: #999;
        text-decoration: line-through;
    }

    .discount-badge {
        background-color: #d70018;
        color: #fff;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 600;
    }

    .stock-status {
        font-size: 13px;
        color: #666;
    }

        .stock-status strong {
            color: #00b14f;
        }

    /* Khuyến mãi (Text) */
    .promotions-box {
        background-color: #f8f8f8;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
    }

    .promotions-header {
        font-size: 14px;
        font-weight: 700;
        color: #d70018;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .promo-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .promo-item {
        font-size: 13px;
        color: #333;
        margin-bottom: 8px;
        display: flex;
        align-items: flex-start;
        gap: 6px;
        line-height: 1.5;
    }

        .promo-item i {
            color: #d70018;
            font-size: 8px;
            margin-top: 6px;
            flex-shrink: 0;
        }

    .promo-item-content {
        flex: 1;
    }

    .promo-item .promo-note {
        color: #666;
        font-size: 12px;
        display: block;
        margin-top: 2px;
    }

    /* Nút mua hàng */
    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .buy-now-btn {
        background-color: #d70018;
        color: #fff;
        border: none;
        padding: 14px;
        border-radius: 8px;
        font-size: 15px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.2s;
        text-transform: uppercase;
    }

        .buy-now-btn:hover:not(:disabled) {
            background-color: #b80015;
        }

        .buy-now-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

    .installment-btn {
        background-color: #fff;
        color: #0066cc;
        border: 1px solid #0066cc;
        padding: 10px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
    }

        .installment-btn:hover:not(:disabled) {
            background-color: #f0f7ff;
        }

        .installment-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }


    .commitment-grid {
        grid-template-columns: repeat(2, 1fr);
    
    }

    }
</style>

<div class="product-header">
    <div class="container">
        <nav aria-label="breadcrumb" class="mb-2">
            <ol class="breadcrumb mb-0" style="font-size: 13px;">
                <li class="breadcrumb-item"><a href="/" style="color: #0066cc;">Trang chủ</a></li>
                <li class="breadcrumb-item"><a href="#" style="color: #0066cc;">@Model.Category?.Name</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
            </ol>
        </nav>
        <div class="d-flex align-items-center">
            <h1 class="product-title">@Model.Name</h1>
            <div class="product-rating">
                <span class="rating-star">★ 4.9</span>
                <span class="rating-count">Đã bán 7.3k</span>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <!-- Cột trái 7 - Hình ảnh, Cam kết và Thông tin -->
        <div class="col-lg-7 col-md-12 mb-3">
            <!-- Hình ảnh sản phẩm -->
            <div class="product-main-container">
                <div class="image-section">
                    <img id="mainImage"
                         src="~/images/@(Model.ProductImages.FirstOrDefault(pi => pi.IsMain)?.FileName ?? "default.png")"
                         alt="@Model.Name"
                         class="main-product-image" />
                    <div class="image-counter">
                        <span id="currentImageIndex">1</span>/<span id="totalImages">@Model.ProductImages.Count()</span>
                    </div>
                </div>

                @if (Model.ProductImages.Any())
                {
                    <div class="thumbnail-container">
                        @{
                            var imageIndex = 0;
                        }
                        @foreach (var img in Model.ProductImages)
                        {
                            imageIndex++;
                            <img src="~/images/@img.FileName"
                                 alt="@Model.Name"
                                 class="thumbnail-img @(img.IsMain ? "active" : "")"
                                 data-index="@imageIndex"
                                 onclick="changeMainImage(this)"
                                 onerror="this.onerror=null; this.src='~/images/default.png';" />
                        }
                    </div>
                }
            </div>

            <!-- Thế Giới Di Động cam kết -->
            <div class="commitments-box">
                <h5 class="commitments-title">Thế Giới Di Động cam kết</h5>
                <div class="commitment-grid">
                    @if (commitments.Any())
                    {
                        @foreach (var commitment in commitments)
                        {
                            <div class="commitment-item">
                                <div class="commitment-icon">
                                    <i class="@(commitment.IconClass ?? "bi bi-shield-check")"></i>
                                </div>
                                <div class="commitment-text">
                                    @commitment.Content
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <!-- Cam kết mặc định -->
                        <div class="commitment-item">
                            <div class="commitment-icon">
                                <i class="bi bi-shield-check"></i>
                            </div>
                            <div class="commitment-text">
                                Bảo hành chính hãng điện thoại 1 năm tại các trung tâm bảo hành hãng
                            </div>
                        </div>
                        <div class="commitment-item">
                            <div class="commitment-icon">
                                <i class="bi bi-arrow-repeat"></i>
                            </div>
                            <div class="commitment-text">
                                Hư gì đổi nấy 12 tháng tại 2963 siêu thị toàn quốc
                            </div>
                        </div>
                        <div class="commitment-item">
                            <div class="commitment-icon">
                                <i class="bi bi-box-seam"></i>
                            </div>
                            <div class="commitment-text">
                                Bộ sản phẩm gồm: Hộp, Sách hướng dẫn, Cáy lấy sim, Cáp Type C
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Tab Thông tin sản phẩm và Thông số kỹ thuật -->
            <div class="info-tabs">
                <ul class="nav nav-pills" id="productTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="description-tab" data-bs-toggle="pill" data-bs-target="#description" type="button" role="tab">
                            Thông tin sản phẩm
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="specifications-tab" data-bs-toggle="pill" data-bs-target="#specifications" type="button" role="tab">
                            Thông số kỹ thuật
                        </button>
                    </li>
                </ul>

                <div class="tab-content" id="productTabsContent">
                    <!-- Tab Thông tin sản phẩm -->
                    <div class="tab-pane fade show active" id="description" role="tabpanel">
                        <div id="descContent" class="content-box">
                            @if (!string.IsNullOrEmpty(Model.Description))
                            {
                                @Html.Raw(Model.Description)
                            }
                            else
                            {
                                <p class="text-muted">Sản phẩm này chưa có mô tả chi tiết.</p>
                            }
                        </div>
                        <div id="readMoreDesc" class="read-more-overlay">
                            <button class="read-more-btn" onclick="toggleContent('descContent', 'readMoreDesc')">
                                Xem thêm nội dung
                            </button>
                        </div>
                    </div>

                    <!-- Tab Thông số kỹ thuật -->
                    <div class="tab-pane fade" id="specifications" role="tabpanel">
                        <div id="specsContent" class="content-box">
                            @if (specGroups.Any())
                            {
                                @foreach (var group in specGroups)
                                {
                                    <h6 class="spec-group-title">@group.Name</h6>
                                    <table class="table table-bordered spec-table">
                                        <tbody>
                                            @foreach (var item in group.Items)
                                            {
                                                <tr>
                                                    <th>@item.Name</th>
                                                    <td>@item.Value</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                            }
                            else
                            {
                                <p class="text-muted">Đang cập nhật thông số kỹ thuật chi tiết.</p>
                            }
                        </div>
                        <div id="readMoreSpecs" class="read-more-overlay">
                            <button class="read-more-btn" onclick="toggleContent('specsContent', 'readMoreSpecs')">
                                Xem thêm thông số
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Cột phải 5 - Giá và mua hàng -->
        <div class="col-lg-5 col-md-12 mb-3">
            <div class="price-section">
               @*  <!-- Banner Khuyến Mãi (Hình ảnh) -->
                @if (promoBanners.Any())
                {
                    <div class="promotional-banners">
                        @foreach (var banner in promoBanners)
                        {
                            <img src="~/images/@banner.ImageUrl" alt="Khuyến mãi" class="promo-banner-img" />
                        }
                    </div>
                } *@

                <!-- Chọn Phiên Bản -->
                @if (versions.Any())
                {
                    <div class="version-selector">
                        <label class="version-label">Chọn phiên bản:</label>
                        <div id="versionOptions" class="version-options">
                            @foreach (var version in versions)
                            {
                                <button type="button" class="version-btn @(version == versions.First() ? "active" : "")"
                                        data-version-id="@version.Id">
                                    @version.Name
                                </button>
                            }
                        </div>
                    </div>
                }

                <!-- Chọn Màu Sắc -->
                @if (colors.Any())
                {
                    <div class="color-selector">
                        <label class="version-label">Chọn màu sắc:</label>
                        <div id="colorOptions" class="color-options">
                            @foreach (var color in colors)
                            {
                                <div class="color-circle @(color == colors.First() ? "active" : "")"
                                     style="background-color: @(color.HexCode ?? "#FFFFFF");"
                                     title="@color.Name"
                                     data-color-name="@color.Name">
                                </div>
                            }
                        </div>
                    </div>
                }

                <!-- Thông Tin Giá -->
                <div class="price-info">
                    <div class="current-price">@Model.Price.ToString("N0")₫</div>
                    @if (Model.OriginalPrice.HasValue && Model.OriginalPrice.Value > Model.Price)
                    {
                        <div class="original-price-row">
                            <span class="original-price">@Model.OriginalPrice.Value.ToString("N0")₫</span>
                            <span class="discount-badge">
                                -@(((Model.OriginalPrice.Value - Model.Price) / (decimal)Model.OriginalPrice.Value * 100).ToString("N0"))%
                            </span>
                        </div>
                    }
                    <div class="stock-status">
                        Trạng thái:
                        <strong class="@(inventoryQuantity > 0 ? "" : "text-danger")">
                            @(inventoryQuantity > 0 ? $"Còn hàng ({inventoryQuantity})" : "Đã hết hàng")
                        </strong>
                    </div>
                </div>

                <!-- Khuyến Mãi Chi Tiết (Text) -->
                @if (promotions.Any())
                {
                    <div class="promotions-box">
                        <div class="promotions-header">
                            <i class="bi bi-gift-fill"></i>
                            KHUYẾN MÃI
                        </div>
                        <ul class="promo-list">
                            @foreach (var promo in promotions)
                            {
                                <li class="promo-item">
                                    <i class="bi bi-circle-fill"></i>
                                    <div class="promo-item-content">
                                        <strong>@promo.Content</strong>
                                        @if (!string.IsNullOrEmpty(promo.Note))
                                        {
                                            <span class="promo-note">(@promo.Note)</span>
                                        }
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                }

                <!-- Form Mua Hàng -->
                <form asp-controller="Cart" asp-action="Add" method="post">
                    <input type="hidden" name="productId" value="@Model.ProductId" />

                    <div class="action-buttons">
                        <button type="submit"
                                class="buy-now-btn"
                                @(Model.IsPublished && inventoryQuantity > 0 ? "" : "disabled")>
                            Mua ngay
                        </button>

                        <button type="button"
                                class="installment-btn"
                                @(Model.IsPublished && inventoryQuantity > 0 ? "" : "disabled")>
                            <i class="bi bi-credit-card"></i> Trả góp qua thẻ
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Hàm chuyển ảnh chính khi click vào thumbnail
    function changeMainImage(thumbnail) {
        const mainImage = document.getElementById('mainImage');
        mainImage.src = thumbnail.src;

        document.querySelectorAll('.thumbnail-img').forEach(img => {
            img.classList.remove('active');
        });
        thumbnail.classList.add('active');

        // Cập nhật số thứ tự ảnh
        const index = thumbnail.getAttribute('data-index');
        document.getElementById('currentImageIndex').textContent = index;
    }

    // Hàm thay đổi trạng thái "Xem thêm"
    function toggleContent(contentId, buttonId) {
        const contentBox = document.getElementById(contentId);
        const readMoreOverlay = document.getElementById(buttonId);
        const button = readMoreOverlay.querySelector('button');

        if (contentBox.classList.contains('expanded')) {
            contentBox.classList.remove('expanded');
            button.innerText = contentId === 'descContent' ? 'Xem thêm nội dung' : 'Xem thêm thông số';
            readMoreOverlay.style.display = 'flex';

            // Scroll về đầu section khi thu gọn
            contentBox.scrollIntoView({ behavior: 'smooth', block: 'start' });
        } else {
            contentBox.classList.add('expanded');
            button.innerText = 'Thu gọn';
            readMoreOverlay.style.display = 'none';
        }
    }

    window.onload = function() {
        // Logic click chọn phiên bản
        const versionOptions = document.getElementById('versionOptions');
        if (versionOptions) {
            versionOptions.addEventListener('click', (e) => {
                const target = e.target.closest('.version-btn');
                if (target) {
                    document.querySelectorAll('.version-btn').forEach(btn => btn.classList.remove('active'));
                    target.classList.add('active');

                    // TODO: Có thể thêm logic cập nhật giá theo phiên bản
                    console.log('Selected version:', target.getAttribute('data-version-id'));
                }
            });
        }

        // Logic click chọn màu sắc
        const colorOptions = document.getElementById('colorOptions');
        if (colorOptions) {
            colorOptions.addEventListener('click', (e) => {
                const target = e.target.closest('.color-circle');
                if (target) {
                    document.querySelectorAll('.color-circle').forEach(circle => circle.classList.remove('active'));
                    target.classList.add('active');

                    // TODO: Có thể thêm logic thay đổi hình ảnh theo màu
                    console.log('Selected color:', target.getAttribute('data-color-name'));
                }
            });
        }

        // Kiểm tra nội dung có cần nút "Xem thêm" không
        const descContent = document.getElementById('descContent');
        const readMoreDesc = document.getElementById('readMoreDesc');
        const specsContent = document.getElementById('specsContent');
        const readMoreSpecs = document.getElementById('readMoreSpecs');

        setTimeout(() => {
            if (descContent && readMoreDesc) {
                if (descContent.scrollHeight <= 600) {
                    readMoreDesc.style.display = 'none';
                }
            }

            if (specsContent && readMoreSpecs) {
                if (specsContent.scrollHeight <= 600) {
                    readMoreSpecs.style.display = 'none';
                }
            }
        }, 100);

        // Xử lý sticky position cho price section trên mobile
        function handleStickyPrice() {
            const priceSection = document.querySelector('.price-section');
            if (priceSection && window.innerWidth >= 992) {
                const headerHeight = 80; // Chiều cao của navbar
                priceSection.style.top = `${headerHeight + 20}px`;
            }
        }

        handleStickyPrice();
        window.addEventListener('resize', handleStickyPrice);
    };
</script>

@section Scripts {
}