@model Ecommerce.Models.Product
@using System.Text.Json

<style>
    /* CSS Tùy chỉnh cho trang Details */
    .thumbnail-image:hover {
        /* Đã được định nghĩa trong mã trước đó */
        border-color: var(--orange) !important;
        box-shadow: 0 0 5px rgba(255, 143, 0, 0.5) !important;
    }

    .specs-table th, .specs-table td {
        /* Đã được định nghĩa trong mã trước đó */
        vertical-align: middle;
    }
</style>

<div class="container my-4">
    <div class="row">
        <div class="col-md-5">
            <img id="mainImage"
                 src="~/images/@Model.ProductImages.FirstOrDefault(pi => pi.IsMain)?.FileName"
                 alt="@Model.Name"
                 class="img-fluid border rounded mb-3"
                 style="max-height: 400px; object-fit: contain; width: 100%;" />

            @if (Model.ProductImages.Count > 1)
            {
                <div class="d-flex flex-row flex-nowrap overflow-auto justify-content-center" style="gap: 8px;">
                    @foreach (var img in Model.ProductImages)
                    {
                        <img src="~/images/@img.FileName"
                             alt="Ảnh phụ"
                             class="border rounded shadow-sm thumbnail-image"
                             style="width: 80px; height: 80px; object-fit: contain; cursor: pointer; transition: 0.2s;"
                             onmouseover="document.querySelector('#mainImage').src=this.src" />
                    }
                </div>
            }
        </div>

        <div class="col-md-7">
            <h2>@Model.Name</h2>

            @* HIỂN THỊ GIÁ KHUYẾN MÃI *@
            @if (Model.SalePrice.HasValue && Model.SalePrice < Model.Price)
            {
                <h3 class="text-danger fw-bold mt-2">@Model.SalePrice.Value.ToString("C")</h3>
                <h4 class="text-muted text-decoration-line-through fs-5">@Model.Price.ToString("C")</h4>
            }
            else
            {
                <h3 class="text-success fw-bold mt-2">@Model.Price.ToString("C")</h3>
            }

            <p class="mt-3"><strong>Mô tả ngắn:</strong> @Model.ShortDescription</p>
            <p><strong>Danh mục:</strong> @Model.Category?.Name</p>
            <p>
                <strong>Số lượng tồn kho:</strong>
                <span id="inventoryQuantity">@(Model.Inventory?.Quantity > 0 ? Model.Inventory.Quantity.ToString() : "Hết hàng")</span>
            </p>

            @* FORM CHỨA DỮ LIỆU SẢN PHẨM VÀ CÁC NÚT HÀNH ĐỘNG *@
            <form asp-controller="Cart" asp-action="Add" method="post" id="productActionForm" class="d-flex align-items-center mt-3 p-3 border rounded bg-light">
                <input type="hidden" name="productId" value="@Model.ProductId" />
                <input type="number"
                       name="quantity"
                       id="quantityInput"
                       value="1"
                       min="1"
                       class="form-control me-3"
                       style="max-width: 100px;"
                       @(Model.IsPublished && Model.Inventory?.Quantity > 0 ? "" : "disabled") />

                <div class="d-flex flex-grow-1" style="gap: 10px;">
                    @* NÚT 1: THÊM VÀO GIỎ (AJAX) - Dùng type="button" *@
                    <button type="button"
                            id="addToCartBtn"
                            class="btn btn-outline-danger btn-lg flex-grow-1"
                            @(Model.IsPublished && Model.Inventory?.Quantity > 0 ? "" : "disabled")>
                        <i class="fas fa-cart-plus me-2"></i> Thêm vào giỏ
                    </button>

                    @* NÚT 2: MUA HÀNG (POST submit và Controller sẽ redirect) - Dùng type="submit" *@
                    <button type="submit"
                            name="action"
                            value="buyNow"
                            class="btn btn-danger btn-lg flex-grow-1"
                            @(Model.IsPublished && Model.Inventory?.Quantity > 0 ? "" : "disabled")>
                        <i class="fas fa-money-bill-wave me-2"></i> Mua hàng
                    </button>
                </div>
            </form>

            @if (!Model.IsPublished)
            {
                <div class="alert alert-warning mt-2" role="alert">Sản phẩm này chưa được đăng bán.</div>
            }
            else if (Model.Inventory?.Quantity == 0)
            {
                <div class="alert alert-danger mt-2" role="alert">Sản phẩm đã hết hàng.</div>
            }
            
            @* Khung thông báo AJAX *@
            <div id="ajaxAlert" class="mt-3" style="display:none;"></div>
        </div>
    </div>

    <hr class="my-5">

    <div class="row mt-4">
        <div class="col-12">

            <ul class="nav nav-tabs product-tabs" id="productDetailTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="detail-tab" data-bs-toggle="tab" data-bs-target="#detail-pane" type="button" role="tab" aria-controls="detail-pane" aria-selected="true">
                        <i class="fas fa-file-alt me-1"></i> Thông tin chi tiết
                    </button>
                </li>
                @if (!string.IsNullOrWhiteSpace(Model.SpecificationsJson))
                {
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="specs-tab" data-bs-toggle="tab" data-bs-target="#specs-pane" type="button" role="tab" aria-controls="specs-pane" aria-selected="false">
                            <i class="fas fa-list-alt me-1"></i> Thông số kỹ thuật
                        </button>
                    </li>
                }
            </ul>

            <div class="tab-content border border-top-0 p-4 rounded-bottom" id="productDetailTabsContent">

                <div class="tab-pane fade show active" id="detail-pane" role="tabpanel" aria-labelledby="detail-tab" tabindex="0">
                    <h4 class="mb-3">Mô tả Sản phẩm</h4>

                    @* HIỂN THỊ MÔ TẢ DÀI (Model.Description) *@
                    <div class="description-content">
                        @Html.Raw(Model.Description)
                    </div>

                    @* HIỂN THỊ NỘI DUNG CHI TIẾT DƯỚI DẠNG JSON (DetailContentJson) *@
                    @if (!string.IsNullOrWhiteSpace(Model.DetailContentJson))
                    {
                        <h5 class="mt-4 text-primary">Nội dung chi tiết (Từ DetailContentJson)</h5>
                        @try
                        {
                            @* Thử hiển thị DetailContentJson như HTML nếu nó là HTML *@
                            @Html.Raw(Model.DetailContentJson)
                        }
                        catch
                        {
                            <p class="text-muted"><i>(Không thể hiển thị DetailContentJson.)</i></p>
                        }
                    }
                </div>

                @if (!string.IsNullOrWhiteSpace(Model.SpecificationsJson))
                {
                    <div class="tab-pane fade" id="specs-pane" role="tabpanel" aria-labelledby="specs-tab" tabindex="0">
                        <h4 class="mb-3">Thông số kỹ thuật chi tiết</h4>

                        <div class="table-responsive">
                            <table class="table table-sm table-bordered table-hover specs-table">
                                <tbody>
                                    @try
                                    {
                                        var jsonDoc = JsonDocument.Parse(Model.SpecificationsJson);

                                        foreach (var element in jsonDoc.RootElement.EnumerateArray())
                                        {
                                            foreach (var prop in element.EnumerateObject())
                                            {
                                                <tr>
                                                    <td class="fw-bold bg-light" style="width: 35%;">@prop.Name</td>
                                                    <td>@prop.Value.ToString()</td>
                                                </tr>
                                            }
                                        }
                                    }
                                    catch
                                    {
                                        <tr><td colspan="2" class="text-danger">Định dạng JSON thông số không hợp lệ. <pre>@Model.SpecificationsJson</pre></td></tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        // Hàm cập nhật badge giỏ hàng
        function updateCartBadge(newCount) {
            const badge = $('#cartBadge');
            if (newCount > 0) {
                badge.text(newCount).show();
            } else {
                badge.text(0).hide(); // Đảm bảo số là 0 khi ẩn
            }
        }
        
        // Hàm hiển thị thông báo AJAX
        function showAjaxAlert(message, isSuccess) {
            const alertDiv = $('#ajaxAlert');
            alertDiv.removeClass('alert-success alert-danger').addClass(isSuccess ? 'alert-success' : 'alert-danger');
            alertDiv.html(message).fadeIn().delay(3000).fadeOut();
        }

        // Xử lý nút "Thêm vào giỏ" bằng AJAX
        $(document).ready(function () {
            $('#addToCartBtn').on('click', function (e) {
                
                const form = $('#productActionForm');
                const url = form.attr('action');
                // Lấy dữ liệu productId và quantity từ form
                const data = {
                    productId: form.find('input[name="productId"]').val(),
                    quantity: form.find('input[name="quantity"]').val()
                };

                const submitButton = $(this);
                const originalText = submitButton.html();
                
                // Hiển thị trạng thái loading
                submitButton.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i> Đang xử lý...');
                
                // Tắt nút "Mua hàng" để tránh xung đột
                $('#productActionForm').find('button[type="submit"]').prop('disabled', true);

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        // Giả sử CartController/Add trả về JSON có dạng { success: true, cartItemCount: 5, message: "..." }
                        if (response.success) {
                            // Cập nhật số lượng trên badge
                            updateCartBadge(response.cartItemCount);
                            
                            // Hiển thị thông báo thành công
                            showAjaxAlert('Đã thêm sản phẩm vào giỏ hàng thành công! Tổng: ' + response.cartItemCount, true);
                            
                            // Cập nhật lại số lượng tồn kho nếu server trả về
                            if (response.newInventoryQuantity !== undefined) {
                                $('#inventoryQuantity').text(response.newInventoryQuantity > 0 ? response.newInventoryQuantity : "Hết hàng");
                            }

                        } else {
                            // Xử lý lỗi từ server (ví dụ: số lượng vượt quá tồn kho)
                            showAjaxAlert('Lỗi: ' + (response.message || 'Không thể thêm sản phẩm vào giỏ hàng.'), false);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX Error:", error);
                        showAjaxAlert('Đã xảy ra lỗi trong quá trình thêm vào giỏ hàng. Vui lòng thử lại.', false);
                    },
                    complete: function () {
                        // Khôi phục các nút
                        submitButton.html(originalText);
                        
                        // Kiểm tra lại tồn kho để đặt trạng thái disabled
                        const currentInventory = parseInt($('#inventoryQuantity').text()) || 0;

                        if (currentInventory > 0) {
                            submitButton.prop('disabled', false);
                            $('#productActionForm').find('button[type="submit"]').prop('disabled', false);
                            $('#productActionForm').find('#quantityInput').prop('disabled', false);
                        } else {
                            submitButton.prop('disabled', true);
                            $('#productActionForm').find('button[type="submit"]').prop('disabled', true);
                            $('#productActionForm').find('#quantityInput').prop('disabled', true);
                        }
                    }
                });
            });

            // Nút "Mua hàng" (type="submit") sẽ gửi form POST truyền thống, 
            // Controller (Cart/Add) sẽ cần kiểm tra action=buyNow để redirect sang trang giỏ hàng.
            // Không cần thêm JS cho nút này nếu logic là POST và Redirect.
        });

    </script>
}