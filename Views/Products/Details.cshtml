@model Ecommerce.ViewModels.EditProductViewModel

@{
    ViewData["Title"] = "Chi Tiết Sản Phẩm: " + Model.Name;
}

<div class="row">
    <div class="col-md-10 offset-md-1">
        <h2 class="text-center mb-4">Chi Tiết Sản Phẩm: @Model.Name</h2>

        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Thông Tin Cơ Bản</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Tên sản phẩm</dt>
                    <dd class="col-sm-9">@Model.Name</dd>

                    <dt class="col-sm-3">SKU</dt>
                    <dd class="col-sm-9">@Model.SKU</dd>

                    @* Lỗi CreatedAt và UpdatedAt: Hai thuộc tính này KHÔNG có trong EditProductViewModel.
                       Nếu bạn muốn hiển thị chúng, bạn cần thêm chúng vào EditProductViewModel 
                       HOẶC tạo một DetailProductViewModel riêng.*@
                    @* Ví dụ nếu đã thêm vào ViewModel:
                    <dt class="col-sm-3">Ngày tạo</dt>
                    <dd class="col-sm-9">@Model.CreatedAt</dd>
                    *@

                    <dt class="col-sm-3">Danh mục</dt>
                    @* Vì Model chỉ có CategoryId, bạn cần tải tên Category ở Controller hoặc dùng ViewData.
                       Nếu dùng ProductDetailController tôi đề xuất, nó sẽ trả về ViewModel, không có tên Category.*@
                    <dd class="col-sm-9">@Model.CategoryId</dd>

                    <dt class="col-sm-3">Trạng thái</dt>
                    <dd class="col-sm-9">
                        @(Model.IsPublished ? "Đang xuất bản" : "Nháp")
                    </dd>

                    <dt class="col-sm-3">Mô tả ngắn</dt>
                    <dd class="col-sm-9">@Model.ShortDescription</dd>
                </dl>
            </div>
        </div>

        @* --- Phần Ảnh Sản Phẩm --- *@
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0">Ảnh Sản Phẩm</h5>
            </div>
            <div class="card-body">
                <div class="d-flex flex-wrap gap-3">
                    @if (Model.ExistingImages != null && Model.ExistingImages.Any())
                    {
                        @* SỬ DỤNG Model.ExistingImages thay vì Model.ProductImages *@
                        @foreach (var image in Model.ExistingImages)
                        {
                            var imageUrl = Url.Content($"~/images/{image.ImageUrl}");
                            <div class="image-card-detail" style="position: relative; width: 150px; height: 150px; border: 1px solid #ccc;">

                                @* THUỘC TÍNH IsPrimary đã có trong ExistingImageViewModel *@
                                @if (image.IsPrimary)
                                {
                                    <span class="badge bg-success" style="position: absolute; top: 0; left: 0; z-index: 10;">Ảnh Chính</span>
                                }
                                <img src="@imageUrl" alt="Ảnh sản phẩm" class="img-thumbnail"
                                     style="width: 100%; height: 100%; object-fit: cover;"
                                     onerror="this.onerror=null;this.src='/images/placeholder.png';" />
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Sản phẩm này chưa có ảnh nào.</p>
                    }
                </div>
            </div>
        </div>

        @* --- Phần Giá và Tồn kho --- *@
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">Giá & Tồn Kho</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Giá niêm yết</dt>
                    <dd class="col-sm-9">@Model.Price.ToString("N0") VNĐ</dd>

                    <dt class="col-sm-3">Giá khuyến mãi</dt>
                    <dd class="col-sm-9">@(Model.SalePrice.HasValue? Model.SalePrice.Value.ToString("N0") + " VNĐ" : "N/A")</dd>

                    <dt class="col-sm-3">Số lượng tồn kho</dt>
                    <dd class="col-sm-9">@Model.Quantity</dd>
                </dl>
            </div>
        </div>

        @* --- Phần Mô tả chi tiết --- *@
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Mô Tả Chi Tiết Sản Phẩm</h5>
            </div>
            <div class="card-body">
                <h6 class="mb-3">Mô tả đầy đủ</h6>
                <div>
                    @Html.Raw(Model.Description)
                </div>

                <h6 class="mt-4">Đặc Tả Kỹ Thuật (SpecificationGroups)</h6>
                @* TRUY CẬP TRỰC TIẾP SpecificationGroups từ ViewModel *@
                @if (Model.SpecificationGroups != null && Model.SpecificationGroups.Any())
                {
                    <div class="border p-3 rounded">
                        @foreach (var group in Model.SpecificationGroups)
                        {
                            <h5>@group.GroupTitle</h5>
                            <ul class="list-group list-group-flush mb-3">
                                @foreach (var item in group.Specifications)
                                {
                                    <li class="list-group-item d-flex justify-content-between">
                                        <strong>@item.Key:</strong>
                                        <span>@item.Value</span>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">Không có đặc tả kỹ thuật nào được cung cấp.</p>
                }

                <h6 class="mt-4">Khối Nội Dung Chi Tiết (DetailContentBlocks)</h6>
                @* TRUY CẬP TRỰC TIẾP DetailContentBlocks từ ViewModel *@
                @if (Model.DetailContentBlocks != null && Model.DetailContentBlocks.Any())
                {
                    <div class="border p-3 rounded">
                        @foreach (var block in Model.DetailContentBlocks)
                        {
                            <div class="mb-3">
                                @if (block.BlockType == "image")
                                {
                                    <img src="@block.Content" alt="Nội dung chi tiết" style="max-width: 100%; height: auto; border-radius: 5px;" onerror="this.onerror=null;this.src='/images/placeholder.png';" />
                                }
                                else
                                {
                                    <p>@block.Content</p>
                                }
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">Không có khối nội dung chi tiết nào được cung cấp.</p>
                }
            </div>
        </div>

        <div class="form-group text-center mt-4 mb-5">
            <a asp-action="Edit" asp-controller="ProductEdit" asp-route-id="@Model.ProductId" class="btn btn-warning btn-lg me-2"><i class="fas fa-edit"></i> Chỉnh Sửa</a>
            <a asp-action="Index" asp-controller="Products" class="btn btn-secondary btn-lg"><i class="fas fa-list"></i> Trở Về Danh Sách</a>
        </div>
    </div>
</div>