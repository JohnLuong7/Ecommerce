@using Ecommerce.ViewModels
@model Ecommerce.ViewModels.CreateProductViewModel

@{
    ViewData["Title"] = "Tạo Sản phẩm Mới";
    // Yêu cầu thư viện Font Awesome và Bootstrap (giả định đã được import trong _Layout)
    var categories = ViewData["Categories"] as List<Ecommerce.Models.Category>;
}

<h2 class="text-center my-4">TẠO SẢN PHẨM MỚI</h2>

<div class="row justify-content-center">
    <div class="col-lg-10 col-xl-8">
        <form asp-action="Create" asp-controller="ProductCreate" method="post" enctype="multipart/form-data">

            <div class="accordion" id="createProductAccordion">

                @* ============================================== *@
                @* MỤC 1: THÔNG TIN CƠ BẢN (Tên, Mô tả, Danh mục) *@
                @* ============================================== *@
                <div class="accordion-item shadow-sm mb-3">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button bg-light fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            1. THÔNG TIN CƠ BẢN
                        </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#createProductAccordion">
                        <div class="accordion-body">
                            <div class="form-group mb-3">
                                <label asp-for="Name" class="form-label">Tên sản phẩm</label>
                                <input asp-for="Name" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="ShortDescription" class="form-label">Mô tả ngắn</label>
                                <input asp-for="ShortDescription" class="form-control" />
                                <span asp-validation-for="ShortDescription" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Description" class="form-label">Mô tả chi tiết</label>
                                <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="CategoryId" class="form-label">Danh mục</label>
                                <select asp-for="CategoryId" class="form-select" asp-items="@(new SelectList(categories, "CategoryId", "Name"))">
                                    <option value="">-- Chọn Danh mục --</option>
                                </select>
                                <span asp-validation-for="CategoryId" class="text-danger"></span>
                            </div>

                            <div class="form-check form-switch mt-4">
                                <input asp-for="IsPublished" class="form-check-input" type="checkbox" role="switch" id="isPublishedSwitch" />
                                <label asp-for="IsPublished" class="form-check-label" for="isPublishedSwitch">Đang xuất bản?</label>
                                <span asp-validation-for="IsPublished" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                @* ============================================== *@
                @* MỤC 2: GIÁ & KHO HÀNG *@
                @* ============================================== *@
                <div class="accordion-item shadow-sm mb-3">
                    <h2 class="accordion-header" id="headingTwo">
                        <button class="accordion-button collapsed bg-light fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            2. GIÁ, MÃ SẢN PHẨM & KHO HÀNG
                        </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#createProductAccordion">
                        <div class="accordion-body">
                            <div class="form-group mb-3">
                                <label asp-for="SKU" class="form-label">Mã SKU</label>
                                <input asp-for="SKU" class="form-control" />
                                <span asp-validation-for="SKU" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Price" class="form-label">Giá niêm yết (VND)</label>
                                <input asp-for="Price" class="form-control" type="number" step="0.01" />
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="SalePrice" class="form-label">Giá khuyến mãi (VND) (Để trống nếu không)</label>
                                <input asp-for="SalePrice" class="form-control" type="number" step="0.01" />
                                <span asp-validation-for="SalePrice" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Quantity" class="form-label">Số lượng tồn kho</label>
                                <input asp-for="Quantity" class="form-control" type="number" value="0" min="0" />
                                <span asp-validation-for="Quantity" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                @* ============================================== *@
                @* MỤC 3: THÔNG SỐ KỸ THUẬT & HÌNH ẢNH (DÙNG JS) *@
                @* ============================================== *@
                <div class="accordion-item shadow-sm mb-3">
                    <h2 class="accordion-header" id="headingThree">
                        <button class="accordion-button collapsed bg-light fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            3. THÔNG SỐ KỸ THUẬT & HÌNH ẢNH
                        </button>
                    </h2>
                    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#createProductAccordion">
                        <div class="accordion-body">

                            <h5 class="mb-3">Thông số Kỹ thuật Chi tiết (Tạo Mục lớn & Mục nhỏ)</h5>

                            <div id="specsContainer">
                            </div>

                            <button type="button" id="addNewGroupBtn" class="btn btn-outline-primary btn-sm mt-3">
                                <i class="fas fa-plus"></i> Thêm Nhóm Thông số (Mục lớn)
                            </button>

                            <input type="hidden" name="Specifications" id="ProductSpecsJson" />

                            <hr class="my-4" />

                            <h5 class="mb-3">Hình ảnh Sản phẩm</h5>
                            <div class="form-group mb-3">
                                <label asp-for="Images" class="form-label">Tải ảnh lên</label>
                                <input type="file" asp-for="Images" multiple class="form-control" />
                                <span asp-validation-for="Images" class="text-danger"></span>
                            </div>

                        </div>
                    </div>
                </div>

            </div> @* End Accordion *@

            <div class="mt-4 mb-5 text-center">
                <button type="submit" class="btn btn-success btn-lg me-3" style="width: 180px;">
                    <i class="fas fa-check-circle me-1"></i> TẠO SẢN PHẨM
                </button>
                <a asp-action="Index" class="btn btn-secondary btn-lg" asp-controller="Products" style="width: 180px;">
                    <i class="fas fa-arrow-left me-1"></i> Quay lại
                </a>
            </div>

        </form>

        @* Hiển thị lỗi *@
        @if (ViewBag.Errors != null)
        {
            <div class="alert alert-danger mt-4">
                <h6>Lỗi tạo sản phẩm:</h6>
                <ul>
                    @foreach (var err in (List<string>)ViewBag.Errors)
                    {
                        <li>@err</li>
                    }
                </ul>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const specsContainer = document.getElementById('specsContainer');
            const addNewGroupBtn = document.getElementById('addNewGroupBtn');
            const productSpecsJsonInput = document.getElementById('ProductSpecsJson');
            const form = document.querySelector('form');
            let groupIndex = 0;

            // Hàm tạo Markup cho một mục nhỏ (Key-Value)
            function createSpecItemMarkup(groupId, key = '', value = '') {
                const specItemId = `spec-${groupId}-${Math.random().toString(36).substr(2, 9)}`;
                return `
                    <div class="input-group mb-2 spec-item" id="${specItemId}">
                        <input type="text" class="form-control spec-key" placeholder="Tên thông số (VD: Hệ điều hành)" value="${key}" required>
                        <input type="text" class="form-control spec-value" placeholder="Giá trị (VD: Android 15)" value="${value}" required>
                        <button type="button" class="btn btn-outline-danger remove-spec-item" data-id="${specItemId}" title="Xóa thông số này">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
            }

            // Hàm tạo Markup cho một nhóm thông số (Mục lớn)
            function createSpecGroupMarkup(groupName = 'Nhóm thông số mới', initialSpecs = []) {
                const groupId = groupIndex++;
                const groupElement = document.createElement('div');
                groupElement.className = 'card card-body mb-3 spec-group';
                groupElement.setAttribute('data-group-id', groupId);

                let initialSpecsMarkup = initialSpecs.length > 0
                    ? initialSpecs.map(spec => createSpecItemMarkup(groupId, spec.Key, spec.Value)).join('')
                    : createSpecItemMarkup(groupId); // Thêm 1 mục mặc định nếu không có

                groupElement.innerHTML = `
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <input type="text" class="form-control group-title fw-bold" style="width: 70%;" placeholder="Tên Mục lớn (VD: Cấu hình & Bộ nhớ)" value="${groupName}" required>
                        <div>
                            <button type="button" class="btn btn-sm btn-success add-spec-item me-2" data-group-id="${groupId}" title="Thêm thông số chi tiết">
                                <i class="fas fa-plus"></i> Mục nhỏ
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-danger remove-spec-group" data-group-id="${groupId}" title="Xóa toàn bộ nhóm này">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    <div class="specs-list" id="specs-list-${groupId}">
                        ${initialSpecsMarkup}
                    </div>
                `;
                return groupElement;
            }

            // Logic Thêm nhóm thông số mới (Mục lớn)
            addNewGroupBtn.addEventListener('click', function() {
                const newGroup = createSpecGroupMarkup();
                specsContainer.appendChild(newGroup);
            });

            // Khởi tạo nhóm mặc định (Ví dụ)
            specsContainer.appendChild(createSpecGroupMarkup('Cấu hình & Bộ nhớ', [
                { Key: 'Hệ điều hành', Value: 'Android 15' },
                { Key: 'Chip xử lý (CPU)', Value: 'Exynos 1580 8 nhân' }
            ]));

            // Logic Thêm/Xóa Mục nhỏ/Mục lớn (Sử dụng event delegation)
            specsContainer.addEventListener('click', function(e) {
                // Thêm mục nhỏ
                if (e.target.closest('.add-spec-item')) {
                    const button = e.target.closest('.add-spec-item');
                    const groupId = button.getAttribute('data-group-id');
                    const specsList = document.getElementById(`specs-list-${groupId}`);
                    specsList.insertAdjacentHTML('beforeend', createSpecItemMarkup(groupId, '', ''));
                }

                // Xóa mục nhỏ
                if (e.target.closest('.remove-spec-item')) {
                    const button = e.target.closest('.remove-spec-item');
                    const specItemId = button.getAttribute('data-id');
                    document.getElementById(specItemId).remove();
                }

                // Xóa mục lớn
                if (e.target.closest('.remove-spec-group')) {
                    const button = e.target.closest('.remove-spec-group');
                    const groupId = button.getAttribute('data-group-id');
                    const groupElement = specsContainer.querySelector(`.spec-group[data-group-id="${groupId}"]`);
                    if (confirm('Bạn có chắc chắn muốn xóa nhóm thông số này không?')) {
                        groupElement.remove();
                    }
                }
            });

            // Logic chính: Thu thập dữ liệu và chuyển thành JSON trước khi submit
            form.addEventListener('submit', function(e) {
                const allSpecs = [];

                document.querySelectorAll('.spec-group').forEach(groupElement => {
                    const groupTitle = groupElement.querySelector('.group-title').value.trim();
                    const specifications = [];

                    if (groupTitle) {
                        groupElement.querySelectorAll('.spec-item').forEach(item => {
                            const key = item.querySelector('.spec-key').value.trim();
                            const value = item.querySelector('.spec-value').value.trim();

                            // Chỉ thêm các cặp Key/Value không rỗng
                            if (key && value) {
                                specifications.push({ Key: key, Value: value });
                            }
                        });

                        // Chỉ thêm nhóm nếu có ít nhất một thông số chi tiết
                        if (specifications.length > 0) {
                            allSpecs.push({
                                GroupTitle: groupTitle,
                                Specifications: specifications
                            });
                        }
                    }
                });

                // Lưu chuỗi JSON vào trường ẩn 'Specifications'
                productSpecsJsonInput.value = JSON.stringify(allSpecs);

                // Tiếp tục submit form
            });
        });
    </script>
}