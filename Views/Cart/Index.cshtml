@model Ecommerce.Models.Cart
@{
    ViewData["Title"] = "Giỏ hàng của bạn";
}

<div class="container my-5">
    <h2 class="mb-4 fw-bold text-primary">🛒 Giỏ hàng của bạn</h2>

    @if (!Model.CartItems.Any())
    {
        <div class="alert alert-info text-center">
            Giỏ hàng trống. <a href="/" class="fw-bold text-decoration-none">Tiếp tục mua sắm</a>.
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-8">
                <table class="table align-middle table-hover shadow-sm bg-white rounded">
                    <thead class="table-light">
                        <tr class="text-center">
                            <th>Sản phẩm</th>
                            <th>Giá</th>
                            <th style="width:150px;">Số lượng</th>
                            <th>Thành tiền</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.CartItems)
                        {
                            <tr class="text-center align-middle" data-id="@item.CartItemId">
                                <td>@item.Product.Name</td>
                                <td>@item.Product.Price.ToString("N0") ₫</td>
                                <td>
                                    <div class="d-flex justify-content-center align-items-center">
                                        <button class="btn btn-sm btn-outline-secondary minus">−</button>
                                        <input type="text" class="form-control form-control-sm text-center mx-1 quantity"
                                               value="@item.Quantity" style="width:50px;" />
                                        <button class="btn btn-sm btn-outline-secondary plus">+</button>
                                    </div>
                                </td>
                                <td class="item-total fw-bold">@((item.Product.Price * item.Quantity).ToString("N0")) ₫</td>
                                <td>
                                    <button class="btn btn-sm btn-danger remove-item"><i class="fas fa-trash-alt"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-md-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="fw-bold mb-3">Tóm tắt đơn hàng</h5>
                        <div class="d-flex justify-content-between">
                            <span>Tổng cộng:</span>
                            <span id="cartTotal" class="fw-bold text-danger">
                                @(Model.CartItems.Sum(i => i.Product.Price * i.Quantity).ToString("N0")) ₫
                            </span>
                        </div>
                        <hr />
                        <button class="btn btn-success w-100 mt-2">Thanh toán</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.querySelectorAll(".plus, .minus").forEach(btn => {
            btn.addEventListener("click", async function () {
                const row = this.closest("tr");
                const id = row.dataset.id;
                const input = row.querySelector(".quantity");
                let quantity = parseInt(input.value);

                if (this.classList.contains("plus")) quantity++;
                else if (quantity > 1) quantity--;

                input.value = quantity;

                const res = await fetch("/Cart/UpdateQuantity", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: `cartItemId=${id}&quantity=${quantity}`
                });

                const data = await res.json();
                if (data.success) {
                    row.querySelector(".item-total").textContent = data.itemTotal;
                    document.getElementById("cartTotal").textContent = data.cartTotal;
                } else {
                    alert(data.message);
                }
            });
        });

        document.querySelectorAll(".remove-item").forEach(btn => {
            btn.addEventListener("click", async function () {
                if (!confirm("Bạn có chắc muốn xóa sản phẩm này?")) return;
                const row = this.closest("tr");
                const id = row.dataset.id;

                const res = await fetch("/Cart/RemoveItem", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: `cartItemId=${id}`
                });

                const data = await res.json();
                if (data.success) {
                    row.remove();
                    document.getElementById("cartTotal").textContent = data.cartTotal;
                } else {
                    alert(data.message);
                }
            });
        });
    </script>
}
